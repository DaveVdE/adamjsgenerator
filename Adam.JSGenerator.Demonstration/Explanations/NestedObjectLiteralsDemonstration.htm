<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <style type="text/css">
        body
        {
            color: InactiveCaptionText;
        }
        h2
        {
            font-size: 120%;
            color: CaptionText;
        }
    </style>
</head>
<body>
    <h2>
        Nested Types</h2>
    <p>
        Passing an object, like an anonymous type, also supports recursion.</p>
    <h2>
        Source:</h2>
    <style type="text/css">
        .cf
        {
            font-family: Courier New;
            font-size: 10pt;
            color: black;
            background: white;
        }
        .cl
        {
            margin: 0px;
        }
        .cb1
        {
            color: blue;
        }
        .cb2
        {
            color: #2b91af;
        }
        .cb3
        {
            color: #a31515;
        }
    </style>
    <div class="cf">
        <p class="cl">
            <span class="cb1">var</span> obj = <span class="cb2">JS</span>.Object(<span class="cb1">new</span></p>
        <p class="cl">
            {</p>
        <p class="cl">
            &nbsp;&nbsp;&nbsp; make = <span class="cb3">&quot;Bow before me, for I am root&quot;</span>,</p>
        <p class="cl">
            &nbsp;&nbsp;&nbsp; type = <span class="cb3">&quot;tshirt&quot;</span>,</p>
        <p class="cl">
            &nbsp;&nbsp;&nbsp; sizes = <span class="cb1">new</span> [] { <span class="cb3">&quot;S&quot;</span>,
            <span class="cb3">&quot;M&quot;</span>, <span class="cb3">&quot;L&quot;</span>,
            <span class="cb3">&quot;XL&quot;</span>, <span class="cb3">&quot;XXL&quot;</span>
            }</p>
        <p class="cl">
            });</p>
        <p class="cl">
            &nbsp;</p>
        <p class="cl">
            <span class="cb1">return</span> obj;</p>
    </div>
</body>
</html>
