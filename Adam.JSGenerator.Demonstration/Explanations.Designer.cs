//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Adam.JSGenerator.Demonstration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Explanations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Explanations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Adam.JSGenerator.Demonstration.Explanations", typeof(Explanations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            body { color: InactiveCaptionText; }
        ///            h2 { font-size: 120%; color: CaptionText; }
        ///        &lt;/style&gt;
        ///    &lt;/head&gt;
        ///	&lt;body&gt;
        ///	    &lt;h2&gt;Implicit Conversions&lt;/h2&gt;
        ///	    &lt;p&gt;When you need to supply an Expression, you can always use a simple string object, int, double or boolean.&lt;/p&gt;
        ///	    &lt;p&gt;Also, when an IdentifierExpression is required, you can simply pass a string.&lt;/p&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImplicitConversions {
            get {
                return ResourceManager.GetString("ImplicitConversions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            body { color: InactiveCaptionText; }
        ///            h2 { font-size: 120%; color: CaptionText; }
        ///            .cf { font-family: Courier New; font-size: 10pt; color: black; background: white; }
        ///            .cl { margin: 0px; }
        ///            .cb1 { color: #2b91af; }
        ///            .cb2 { color: #a31515; }
        ///        &lt;/style&gt;
        ///    &lt;/head&gt;
        ///	&lt;body&gt;
        ///	    &lt;h2&gt;Parsing Identifiers&lt;/h2&gt;
        ///	    &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ParsedIdentifierExplanation {
            get {
                return ResourceManager.GetString("ParsedIdentifierExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///    &lt;head&gt;
        ///        &lt;style type=&quot;text/css&quot;&gt;
        ///            body { color: InactiveCaptionText; }
        ///            h2 { font-size: 120%; color: CaptionText; }
        ///            .cf { font-family: Courier New; font-size: 10pt; color: black; background: white; }
        ///            .cl { margin: 0px; }
        ///            .cb1 { color: #2b91af; }
        ///            .cb2 { color: #a31515; }
        ///        &lt;/style&gt;
        ///    &lt;/head&gt;
        ///	&lt;body&gt;
        ///	    &lt;h2&gt;Simple Identifiers&lt;/h2&gt;
        ///	    &lt;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleIdentifierExplanation {
            get {
                return ResourceManager.GetString("SimpleIdentifierExplanation", resourceCulture);
            }
        }
    }
}
